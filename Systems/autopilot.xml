<?xml version="1.0" encoding="UTF-8"?>

<PropertyList>
   <name>autopilot-dlg</name>
   <layout>vbox</layout>
   <group>
      <layout>hbox</layout>
      <empty>
         <stretch>1</stretch>
      </empty>
      <text>
         <label>Autopilot</label>
      </text>
      <empty>
         <stretch>1</stretch>
      </empty>
      <button>
         <pref-width>16</pref-width>
         <pref-height>16</pref-height>
         <legend />
         <default>1</default>
         <keynum>27</keynum>
         <border>2</border>
         <binding>
            <command>dialog-close</command>
         </binding>
         <binding>
            <command>dialog-apply</command>
         </binding>
      </button>
   </group>
   <hrule />
   <nasal>
        <open>
      ## autopilot gui class
      #
      APGui = {
          new : func() {
              var m = { parents: [APGui] };
              var modes = ["true-heading-hold", "wing-leveler", "nav1-hold"];
              m.modes = [];

              m.lockPitch = props.globals.getNode("/autopilot/locks/altitude", 1);
              m.lockRoll = props.globals.getNode("/autopilot/locks/heading", 1);
              m.lockAt = props.globals.getNode("/autopilot/locks/speed", 1);

              m.powerAp = dlg.getNode("power-ap", 1);
              m.powerAt = dlg.getNode("power-at", 1);
              m.channelPitch = dlg.getNode("channel-pitch", 1);
              m.channelRoll = dlg.getNode("channel-roll", 1);

              foreach (var o; modes) {
                  var node = dlg.getNode(o);
                  if (node == nil) {
                      node = dlg.getNode(o, 1);
                      node.setBoolValue(0);
                  }
                  append(m.modes, node);
              }
              m.modes[1].setBoolValue(1);
              return m;
          },

          ## handle radiobuttons
          #
          set : func(mode) {
              foreach (var o; me.modes) {
                  o.setBoolValue(o.getName() == mode);
              }
          },

          ## handle AP power checkbox
          #
          setPowerAp : func {
          },

          ## handle AT power checkbox
          #
          setPowerAt : func {
              if(!me.powerAt.getBoolValue())
              {
                  me.lockAt.setValue("");
              }
          },

          ## handle AT button
          #
          activateAt : func {
              if(me.powerAt.getBoolValue())
              {
                  var speed = props.globals.getNode("/instrumentation/airspeed-indicator/true-speed-kt", 1).getValues();
                  props.globals.getNode("/autopilot/settings/target-speed-kt", 1).setValue(speed);
                  me.lockAt.setValue("speed-with-throttle");
              }
          },
      };

      var dlg = props.globals.getNode("/sim/gui/dialogs/autopilot", 1);
      var apg = APGui.new();
    </open>
   </nasal>

   <!--  AP controller  -->
   <group>
      <layout>vbox</layout>
   <group>
      <layout>hbox</layout>
   <group>
      <layout>vbox</layout>
         <pref-width>90</pref-width>
      <text>
         <label>Roll Channel:</label>
      </text>
        <input>
            <pref-width>70</pref-width>
            <pref-height>20</pref-height>
            <property>/sim/gui/dialogs/autopilot/roll-text</property>
            <live>true</live>
        </input>
      </group>

      <dial>
         <pref-width>70</pref-width>
         <pref-height>70</pref-height>
         <property>/autopilot/settings/vertical-speed-fpm</property>
         <min>-3000</min>
         <max>3000</max>
         <wrap>false</wrap>
         <binding>
            <command>dialog-apply</command>
         </binding>
         <binding>
            <command>dialog-update</command>
         </binding>
      </dial>
   <group>
      <layout>vbox</layout>
         <pref-width>90</pref-width>
      <text>
         <label>Pitch Channel:</label>
      </text>
        <input>
            <pref-width>70</pref-width>
            <pref-height>20</pref-height>
            <property>/sim/gui/dialogs/autopilot/pitch-text</property>
            <live>true</live>
        </input>
      </group>

      </group>
      <group>
         <layout>table</layout>
         <button>
            <legend>Course</legend>
            <row>0</row>
            <col>0</col>
            <pref-height>40</pref-height>
            <pref-width>100</pref-width>
         </button>
         <button>
            <legend>Glideslope</legend>
            <row>0</row>
            <col>1</col>
            <pref-height>40</pref-height>
            <pref-width>100</pref-width>
         </button>
         <button>
            <legend>DN</legend>
            <row>0</row>
            <col>2</col>
            <pref-height>40</pref-height>
            <pref-width>30</pref-width>
         </button>
         <button>
            <legend>Activate</legend>
            <row>1</row>
            <col>0</col>
            <pref-height>40</pref-height>
            <pref-width>100</pref-width>
         </button>
         <button>
            <legend>Stabilize Height</legend>
            <row>1</row>
            <col>1</col>
            <pref-height>40</pref-height>
            <pref-width>100</pref-width>
         </button>
         <button>
            <legend>UP</legend>
            <row>1</row>
            <col>2</col>
            <pref-height>40</pref-height>
            <pref-width>30</pref-width>
         </button>
      </group>
      <group>
         <layout>table</layout>
         <checkbox>
            <label>Power</label>
            <halign>left</halign>
            <row>0</row>
            <col>0</col>
            <property>/sim/gui/dialogs/autopilot/power-ap</property>
            <live>true</live>
            <binding>
               <command>dialog-apply</command>
            </binding>
            <binding>
               <command>nasal</command>
               <script>apg.setPowerAp()</script>
            </binding>
            <binding>
               <command>property-toggle</command>
            </binding>
            <binding>
               <command>dialog-apply</command>
            </binding>
            <live>true</live>
         </checkbox>
         <checkbox>
            <label>Roll Channel</label>
            <halign>left</halign>
            <row>1</row>
            <col>0</col>
            <binding>
               <command>dialog-update</command>
            </binding>
         </checkbox>
         <checkbox>
            <label>Pitch Channel</label>
            <halign>left</halign>
            <row>2</row>
            <col>0</col>
            <binding>
               <command>dialog-update</command>
            </binding>
         </checkbox>
         <radio>
            <label>Heading</label>
            <halign>left</halign>
            <row>0</row>
            <col>1</col>
            <property>/sim/gui/dialogs/autopilot/heading-hold</property>
            <live>true</live>
            <binding>
               <command>nasal</command>
               <script>apg.set("heading-hold")</script>
            </binding>
         </radio>
         <radio>
            <label>Wings Level</label>
            <halign>left</halign>
            <row>1</row>
            <col>1</col>
            <property>/sim/gui/dialogs/autopilot/wing-leveler</property>
            <live>true</live>
            <binding>
               <command>nasal</command>
               <script>apg.set("wing-leveler")</script>
            </binding>
         </radio>
         <radio>
            <label>NAV Course</label>
            <halign>left</halign>
            <row>2</row>
            <col>1</col>
            <property>/sim/gui/dialogs/autopilot/nav-hold</property>
            <live>true</live>
            <binding>
               <command>nasal</command>
               <script>apg.set("nav-hold")</script>
            </binding>
         </radio>
      </group>
   </group>

   <!-- Autothrottle -->
   <group>
      <layout>hbox</layout>
      <hrule>
         <stretch>true</stretch>
      </hrule>
      <text>
         <label>Autothrottle</label>
      </text>
      <hrule>
         <stretch>true</stretch>
      </hrule>
   </group>
   <group>
      <layout>table</layout>
      <checkbox>
         <label>Power</label>
         <halign>right</halign>
         <row>0</row>
         <col>0</col>
         <property>/sim/gui/dialogs/autopilot/power-at</property>
         <live>true</live>
         <binding>
            <command>dialog-apply</command>
         </binding>
         <binding>
            <command>nasal</command>
            <script>apg.setPowerAt()</script>
         </binding>
      </checkbox>
      <button>
         <pref-height>40</pref-height>
         <pref-width>40</pref-width>
         <row>0</row>
         <col>1</col>
         <legend>AT</legend>
         <binding>
            <command>nasal</command>
            <script>apg.activateAt()</script>
         </binding>
      </button>
      <text>
         <label>Deactivate</label>
         <halign>right</halign>
         <row>1</row>
         <col>0</col>
      </text>
      <button>
         <pref-height>40</pref-height>
         <pref-width>40</pref-width>
         <row>1</row>
         <col>1</col>
         <legend>l</legend>
         <binding>
            <command>dialog-update</command>
         </binding>
      </button>
      <button>
         <pref-height>40</pref-height>
         <pref-width>40</pref-width>
         <row>1</row>
         <col>2</col>
         <legend>ll</legend>
         <binding>
            <command>dialog-update</command>
         </binding>
      </button>
   </group>
</PropertyList>
